name: Coding Standards

on: [push, workflow_dispatch]

jobs:
  setup-env:
    runs-on: ubuntu-latest
    name: Lint Code
    strategy:
      matrix:
        # If you add new lint commands here, you must also update the repo's branch protection settings so that check is
        # marked as required
        lint_cmd: [isort, black, pylint, mypy, safety, licencing]
    env:
      PIP_INDEX_URL: https://${{ secrets.PIP_INDEX_URL_USERNAME_AND_ACCESS_TOKEN }}@metoffice.jfrog.io/metoffice/api/pypi/pypi/simple
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Cache pip downloads
        uses: actions/cache@v2
        env:
          cache-name: pip-wheel-cache-for-linting
        with:
          path: ~/.cache/pip # for Unix/Linux
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements/*') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install tox
        run: pip install -r requirements-tox.txt
        working-directory: requirements/ # In case of relative references

      - name: Install dependencies
        run: tox -e dev --devenv .venv

      - name: Run invoke linting
        env:
          LINT_CMD: ${{ matrix.lint_cmd }}
        run: . .venv/bin/activate && invoke $LINT_CMD
